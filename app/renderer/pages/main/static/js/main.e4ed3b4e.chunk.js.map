{"version":3,"sources":["../external \"electron\"","../external \"events\"","peer-puppet.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","require","ipcRenderer","getScreenStream","invoke","sources","Promise","resolve","rejetc","navigator","webkitGetUserMedia","audio","video","mandatory","chromeMediaSource","chromeMediaSourceId","id","maxWidth","window","screen","width","maxHeight","height","stream","err","console","error","pc","RTCPeerConnection","ondatachannel","e","log","channel","onmessage","JSON","parse","data","type","send","onicecandidate","candidate","stringify","on","addIceCandidate","candidates","push","remoteDescription","i","length","RTCIceCandidate","createAnswer","offer","screenStream","addStream","setRemoteDescription","setLocalDescription","localDescription","answer","sdp","App","useState","remoteCode","setRemoteCode","localCode","setLocalCode","controlText","setControlText","login","code","useEffect","handleControlState","removeListener","name","className","value","onChange","target","onClick","startControl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e4ed3b4e.chunk.js","sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"events\");","const EventEmitter = require('events')\nconst peer = new EventEmitter()\nconst { ipcRenderer } = require('electron')\nasync function getScreenStream() {\n  let sources = await ipcRenderer.invoke('sources')\n  return new Promise((resolve, rejetc) => {\n    navigator.webkitGetUserMedia({\n      audio: false,\n      video: {\n        mandatory: {\n          chromeMediaSource: 'desktop',\n          chromeMediaSourceId: sources[0].id,\n          maxWidth: window.screen.width,\n          maxHeight: window.screen.height\n        }\n      }\n    }, (stream) => {\n      resolve(stream)\n    }, (err) => {\n      // error\n      console.error(err)\n    })\n  })\n}\nconst pc = new window.RTCPeerConnection({}) // 创建一个datachannel\n\n// 发现新数据通道传输\npc.ondatachannel = (e) => {\n  console.log('datachannel', e)\n  e.channel.onmessage = (e) => { // 监听数据通道消息\n    let { type, data } = JSON.parse(e.data)\n    if(type === 'mouse') {\n      data.screen = { \n        width: window.screen.width,\n        height: window.screen.height\n      }\n    }\n    ipcRenderer.send('robot', type, data)\n  }\n}\n\n/**\n * @info 设置了本地描述，就开始触发，无论是报价还是答案。\n *       为localDescription设置了offer或answer\n **/ \npc.onicecandidate = function (e) {\n  if (e.candidate) {\n    console.log('傀儡端candidate', e.candidate)\n    ipcRenderer.send('forward', 'puppet-candidate', JSON.stringify(e.candidate))\n  }\n}\nipcRenderer.on('control-candidate', (e, candidate) => {\n  console.log('加入candidate傀儡端')\n  addIceCandidate(candidate)\n})\nlet candidates = []\nasync function addIceCandidate(candidate) {\n  if(candidate) {\n    candidates.push(candidate)\n  }\n  if (pc.remoteDescription && pc.remoteDescription.type) {\n    for(let i = 0;i < candidates.length;i++) {\n      await pc.addIceCandidate(new RTCIceCandidate(JSON.parse(candidates[i])))\n    }\n    candidates = []\n  }\n}\nipcRenderer.on('offer', async (e, offer) => {\n  console.log('拿到offer')\n  let answer = await createAnswer(offer)\n  ipcRenderer.send('forward', 'answer', { type:answer.type, sdp: answer.sdp })\n})\nasync function createAnswer(offer) {\n  console.log('answer ')\n  let screenStream = await getScreenStream()\n  // 添加视频流信息\n  pc.addStream(screenStream)\n  await pc.setRemoteDescription(offer)\n  await pc.setLocalDescription(await pc.createAnswer())\n  return pc.localDescription\n}\n\n/**\n * @STUN过程\n * 控制端询问地址 onIceCandidate \n * STUN返回 IceEvent、包含IP+端口 e.candidate\n * 将IceEvent 发送给傀儡端\n * 傀儡端 添加ICE代理 addIceCandidate\n */","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { ipcRenderer } from 'electron'\nimport './peer-puppet.js'\nfunction App() {\n  const [remoteCode, setRemoteCode] = useState('') // 控制code\n  const [localCode, setLocalCode] = useState('') // 本地的code\n  const [controlText, setControlText] = useState('') // 控制文案\n  \n  const login = async () => {\n    let code = await ipcRenderer.invoke('login')\n    setLocalCode(code)\n  }\n  useEffect(() => { //react hook 组件挂载后执行\n    login()\n    ipcRenderer.on('control-state-change', handleControlState)\n    return () => { // 退出后 卸载组件后执行\n      ipcRenderer.removeListener('control-state-change', handleControlState)\n    }\n  }, [])\n  /**\n   * @info 开始告知主进程开始控制\n   * @param {*} remoteCode 控制端的code\n   */\n  const startControl = (remoteCode) => {\n    ipcRenderer.send('control', remoteCode)\n  }\n  const handleControlState = (e, name, type) => {\n    console.log(name)\n    let text = ''\n    if (type === 1) {\n      text = '正在远程控制' + name\n    } else {\n      text = '被' + name + '控制'\n    }\n    setControlText(text)\n  }\n  return (\n    <div className=\"App\">\n      \n      {\n        controlText === '' ? <>\n          <div>你的控制码{ localCode }</div>\n          <input type=\"text\" value={remoteCode} onChange={ e => setRemoteCode(e.target.value) } />\n          <button onClick={() => startControl(remoteCode)}>确认</button>\n        </> : <div>{controlText}</div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}