{"version":3,"sources":["../external \"electron\"","../external \"events\"","peer-puppet.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","require","ipcRenderer","on","e","offer","getScreenStream","addIceCandidate","createAnswer","console","log","screenStream","pc","addStream","setRemoteDescription","setLocalDescription","localDescription","candidate","candidates","push","remoteDescription","type","i","length","RTCIceCandidate","JSON","parse","invoke","sources","Promise","resolve","reject","navigator","webkitGetUserMedia","audio","video","mandatory","chromeMediaSource","chromeMediaSourceId","id","maxWidth","window","screen","width","maxHeight","height","stream","err","error","RTCPeerConnection","ondatachannel","channel","onmessage","data","send","onicecandidate","stringify","then","answer","sdp","App","useState","remoteCode","setRemoteCode","localCode","setLocalCode","controlText","setControlText","login","code","useEffect","handleControlState","removeListener","name","className","value","onChange","target","onClick","startControl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.557f32ee.chunk.js","sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"events\");","const EventEmitter = require('events')\nconst peer = new EventEmitter()\nconst { ipcRenderer } = require('electron')\n\nipcRenderer.on('offer', async (e, offer) => {\n  const pc = new window.RTCPeerConnection({}) // 创建一个datachannel\n\n  // 发现新数据通道传输\n  pc.ondatachannel = (e) => {\n    console.log('发现新的！！！datachannel', e)\n    e.channel.onmessage = (e) => { // 监听数据通道消息\n      console.log('onmessage', e, JSON.parse(e.data))\n      let { type, data } = JSON.parse(e.data)\n      if(type === 'mouse') {\n        data.screen = { \n          width: window.screen.width,\n          height: window.screen.height\n        }\n      }\n      ipcRenderer.send('robot', type, data)\n    }\n  }\n\n  async function getScreenStream() {\n    let sources = await ipcRenderer.invoke('sources')\n    return new Promise((resolve, reject) => {\n      navigator.webkitGetUserMedia({\n        audio: false,\n        video: {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sources[0].id,\n            maxWidth: window.screen.width,\n            maxHeight: window.screen.height\n          }\n        }\n      }, (stream) => {\n        resolve(stream)\n      }, (err) => {\n        // error\n        console.error(err)\n      })\n    })\n  }\n\n  /**\n   * @info 设置了本地描述，就开始触发，无论是报价还是答案。\n   *       为localDescription设置了offer或answer\n   **/ \n  pc.onicecandidate = function (e) {\n    if (e.candidate) {\n      console.log('傀儡端candidate', e.candidate)\n      ipcRenderer.send('forward', 'puppet-candidate', JSON.stringify(e.candidate))\n    }\n  }\n\n  ipcRenderer.on('control-candidate', (e, candidate) => {\n    console.log('加入candidate傀儡端')\n    addIceCandidate(candidate)\n  })\n  let candidates = []\n  async function addIceCandidate(candidate) {\n    if(candidate) {\n      candidates.push(candidate)\n    }\n    if (pc.remoteDescription && pc.remoteDescription.type) {\n      for(let i = 0;i < candidates.length;i++) {\n        await pc.addIceCandidate(new RTCIceCandidate(JSON.parse(candidates[i])))\n      }\n      candidates = []\n    }\n  }\n  async function createAnswer(offer) {\n    console.log('answer ')\n    let screenStream = await getScreenStream()\n    // 添加视频流信息\n    pc.addStream(screenStream)\n    await pc.setRemoteDescription(offer)\n    await pc.setLocalDescription(await pc.createAnswer())\n    return pc.localDescription\n  }\n  \n  createAnswer(offer).then((answer) => {\n    ipcRenderer.send('forward', 'answer', {type: answer.type, sdp: answer.sdp})\n  })\n})\n\nexport default peer\n\n\n/**\n * @STUN过程\n * 控制端询问地址 onIceCandidate \n * STUN返回 IceEvent、包含IP+端口 e.candidate\n * 将IceEvent 发送给傀儡端\n * 傀儡端 添加ICE代理 addIceCandidate\n */","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { ipcRenderer } from 'electron'\nimport './peer-puppet.js'\nfunction App() { \n  const [remoteCode, setRemoteCode] = useState('') // 控制code\n  const [localCode, setLocalCode] = useState('') // 本地的code\n  const [controlText, setControlText] = useState('') // 控制文案\n  \n  const login = async () => {\n    let code = await ipcRenderer.invoke('login')\n    setLocalCode(code)\n  }\n  useEffect(() => { //react hook 组件挂载后执行\n    login()\n    ipcRenderer.on('control-state-change', handleControlState)\n    return () => { // 退出后 卸载组件后执行\n      ipcRenderer.removeListener('control-state-change', handleControlState)\n    }\n  }, [])\n  /**\n   * @info 开始告知主进程开始控制\n   * @param {*} remoteCode 控制端的code\n   */\n  const startControl = (remoteCode) => {\n    ipcRenderer.send('control', remoteCode)\n  }\n  const handleControlState = (e, name, type) => {\n    console.log(name)\n    let text = ''\n    if (type === 1) {\n      text = '正在远程控制' + name\n    } else {\n      text = '被' + name + '控制'\n    }\n    setControlText(text)\n  }\n  return (\n    <div className=\"App\">\n      \n      {\n        controlText === '' ? <>\n          <div>你的控制码{ localCode }</div>\n          <input type=\"text\" value={remoteCode} onChange={ e => setRemoteCode(e.target.value) } />\n          <button onClick={() => startControl(remoteCode)}>确认</button>\n        </> : <div>{controlText}</div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}